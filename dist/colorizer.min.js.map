{"version":3,"sources":["node_modules/browser-pack/_prelude.js","index.js","colorizer.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","colorizer","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","Colorizer","color","flag","Object","create","ColorizerBase","init","hsl","__checkHsl","__rgb","__hslToRgb","__convertString","__checkRgb","multiply","factor","rgb","__formatAll","__applyMethod","divide","add","subtract","step","method","steps","_this","array","push","converted","map","__combine","blend","_this2","luminance","setHue","value","__setHsl","adjustHue","__adjustHsl","setSaturation","adjustSaturation","setLightness","adjustLightness","to","format","__rgbToHsl","hue","saturation","lightness","b","min","Math","max","diff","round","h","q","p","__hueToRgb","hex","replace","test","match","offset","string","charAt","repeat","Number","parseInt","__normalize","upper","lower","__format","_this3","channel","__formatFactor","Array","isArray","numProvided","_this4","reduce","c","__pad","toString","v","chars","char","which"],"mappings":"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","file":"colorizer.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict'\n\nconst ColorizerBase = {\n  /**\n   * Setup the Colorizer instance\n   * @param  {Array, String} color Hex, RGB, or HSL color\n   * @param  {Boolean} hsl   Flag to indicate the color is HSL\n   * @return {Object}       Colorizer instance\n   */\n  init (color, hsl) {\n    if (hsl) {\n      if (!this.__checkHsl(color)) throw new Error('Invalid color provided')\n      this.__rgb = this.__hslToRgb(color)\n      return this\n    }\n    if (typeof color === 'string') color = this.__convertString(color)\n    if (!this.__checkRgb(color)) throw new Error('Invalid color provided')\n    this.__rgb = color\n    return this\n  },\n  /**\n   * Multiplies the RGB values for a Colorizer color\n   * @param  {Number, Array, String} factor a number or another color\n   * @return {Object}        Colorizer instance\n   */\n  multiply (factor) {\n    const rgb = this.__rgb\n    this.__rgb = this.__formatAll(this.__applyMethod('multiply', factor, [rgb[0], rgb[1], rgb[2]]))\n    return this\n  },\n  /**\n   * Divides the RGB values for a Colorizer color\n   * @param  {Number, Array, String} factor a number or another color\n   * @return {Object}        Colorizer instance\n   */\n  divide (factor) {\n    const rgb = this.__rgb\n    this.__rgb = this.__formatAll(this.__applyMethod('divide', factor, [rgb[0], rgb[1], rgb[2]]))\n    return this\n  },\n  /**\n   * Adds the RGB values for a Colorizer color\n   * @param  {Number, Array, String} factor a number or another color\n   * @return {Object}        Colorizer instance\n   */\n  add (factor) {\n    const rgb = this.__rgb\n    this.__rgb = this.__formatAll(this.__applyMethod('add', factor, [rgb[0], rgb[1], rgb[2]]))\n    return this\n  },\n  /**\n   * Subtract the RGB values for a Colorizer color\n   * @param  {Number, Array, String} factor a number or another color\n   * @return {Object}        Colorizer instance\n   */\n  subtract (factor) {\n    const rgb = this.__rgb\n    this.__rgb = this.__formatAll(this.__applyMethod('subtract', factor, [rgb[0], rgb[1], rgb[2]]))\n    return this\n  },\n  /**\n   * Performs the same calculation to the color for a number of steps\n   * @param  {String} method the name of an existing method (add, subtract, etc.)\n   * @param  {Number, Array, String} factor a number or another color\n   * @param  {Number} steps  number of times to repeat the action\n   * @return {Array}        the stepped calculations, starting with the original color\n   */\n  step (method, factor, steps) {\n    const rgb = this.__rgb\n    let array = [rgb]\n    for (let i = 1; i < steps + 1; i++) {\n      array.push(this.__applyMethod(method, factor, array[i - 1]))\n    }\n    const converted = array.map((rgb) => this.__combine(this.__formatAll(rgb)))\n    return converted\n  },\n  /**\n   * Performs a gradient operation, returning the specified number of steps in the mixin\n   * @param  {Array, String} color another color\n   * @param  {Number} steps number of steps in between the two colors to return\n   * @return {Array}       the colors between the original color and color passed in\n   */\n  blend (color, steps) {\n    const rgb = this.__rgb\n    if (typeof color === 'string') color = this.__convertString(color)\n    let step = [(color[0] - rgb[0]) / steps, (color[1] - rgb[1]) / steps, (color[2] - rgb[2]) / steps]\n    let array = [rgb]\n    for (let i = 1; i < steps; i++) {\n      array.push([array[i - 1][0] + step[0], array[i - 1][1] + step[1], array[i - 1][2] + step[2]])\n    }\n    array.push(color)\n    const converted = array.map((rgb) => this.__combine(this.__formatAll(rgb)))\n    return converted\n  },\n  /**\n   * Returns th luminance for the color\n   * @return {Number} the un-rounded luminance value between 0 and 1\n   */\n  luminance () {\n    const rgb = this.__rgb\n    return 0.2126 * (rgb[0] / 255) + 0.7152 * (rgb[1] / 255) + 0.0722 * (rgb[2] / 255)\n  },\n  /**\n   * Set the hue on the color\n   * @param {Object} value Colorizer instance\n   */\n  setHue (value) {\n    this.__rgb = this.__setHsl(0, this.__rgb, value)\n    return this\n  },\n  /**\n   * Adjust the hue relative to where it is currently\n   * @param {Object} value Colorizer instance\n   */\n  adjustHue (factor) {\n    this.__rgb = this.__adjustHsl(0, this.__rgb, factor)\n    return this\n  },\n  /**\n   * Set the saturation on the color\n   * @param {Object} value Colorizer instance\n   */\n  setSaturation (value) {\n    this.__rgb = this.__setHsl(1, this.__rgb, value)\n    return this\n  },\n  /**\n   * Adjust the saturation relative to where it is currently\n   * @param {Object} value Colorizer instance\n   */\n  adjustSaturation (factor) {\n    this.__rgb = this.__adjustHsl(1, this.__rgb, factor)\n    return this\n  },\n  /**\n   * Set the lightness on the color\n   * @param {Object} value Colorizer instance\n   */\n  setLightness (value) {\n    this.__rgb = this.__setHsl(2, this.__rgb, value)\n    return this\n  },\n  /**\n   * Adjust the lightness relative to where it is currently\n   * @param {Object} value Colorizer instance\n   */\n  adjustLightness (factor) {\n    this.__rgb = this.__adjustHsl(2, this.__rgb, factor)\n    return this\n  },\n  /**\n   * Return the color in one of several format\n   * @param  {String} format the format to return\n   * @return {Array}          RGB (255, 255, 255)\n   * @return {String}         Hex\n   * @return {Array}          HSL (360, 100, 100)\n   * @return {Number}         Luminance (between 0 and 1)\n   */\n  to (format) {\n    const rgb = this.__rgb\n    switch (format) {\n      case 'rgb':\n        return rgb\n      case 'hex':\n        return this.__combine(rgb)\n      case 'hsl':\n        return this.__rgbToHsl(rgb)\n      case 'luminance':\n        return this.luminance()\n      default:\n        throw new Error('Invalid format provided.')\n    }\n  },\n  __rgb: [0, 0, 0],\n  __rgbToHsl (rgb) {\n    let hue, saturation, lightness\n    const r = rgb[0] / 255\n    const g = rgb[1] / 255\n    const b = rgb[2] / 255\n    const min = Math.min(r, g, b)\n    const max = Math.max(r, g, b)\n    const diff = max - min\n    lightness = (max + min) / 2\n    if (diff === 0) hue = saturation = 0\n    else {\n      saturation = (lightness < 0.5) ? diff / (max + min) : diff / (2 - max - min)\n      switch (max) {\n        case r:\n          hue = (g - b) / diff + (g < b ? 6 : 0)\n          break\n        case g:\n          hue = (b - r) / diff + 2\n          break\n        case b:\n          hue = (r - g) / diff + 4\n          break\n      }\n    }\n    return [Math.round(hue * 60), Math.round(saturation * 100), Math.round(lightness * 100)]\n  },\n  __hslToRgb (hsl) {\n    const h = hsl[0] / 360\n    const s = hsl[1] / 100\n    const l = hsl[2] / 100\n    let r, g, b\n    if (s === 0) {\n      r = g = b = l\n    } else {\n      var q = l < 0.5 ? l * (1 + s) : l + s - l * s\n      var p = 2 * l - q\n      r = this.__hueToRgb(p, q, h + 1 / 3)\n      g = this.__hueToRgb(p, q, h)\n      b = this.__hueToRgb(p, q, h - 1 / 3)\n    }\n\n    return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)]\n  },\n  __hueToRgb (p, q, t) {\n    if (t < 0) t += 1\n    if (t > 1) t -= 1\n    if (t < 1 / 6) return p + (q - p) * 6 * t\n    if (t < 1 / 2) return q\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\n    return p\n  },\n  __convertString (hex) {\n    hex = hex.replace('#', '')\n    if (!(/^([0-9a-fA-F]{3})(\\1|[0-9a-fA-F]{3})?$/.test(hex))) throw new Error('Invalid hex color code provided')\n    if (hex.length === 3) hex = hex.replace(/[a-zA-Z0-9]/g, (match, offset, string) => string.charAt(offset).repeat(2))\n    hex = Number.parseInt(hex, 16)\n    return [(hex >> 16) & 0xFF, (hex >> 8) & 0xFF, hex & 0xFF]\n  },\n  __normalize (n, upper, lower) {\n    if (n > upper) return upper\n    if (n < lower) return lower\n    return n\n  },\n  __format (n) {\n    return Math.round(this.__normalize(n, 255, 0))\n  },\n  __formatAll (rgb) {\n    return rgb.map((channel) => this.__format(channel))\n  },\n  __checkRgb (rgb) {\n    if (rgb.length !== 3) return false\n    for (let i = 0; i < rgb.length; i++) {\n      if (typeof rgb[i] !== 'number' || rgb[i] > 255 || rgb[i] < 0) return false\n    }\n    return true\n  },\n  __checkHsl (hsl) {\n    if (hsl.length !== 3) return false\n    for (let i = 0; i < hsl.length; i++) {\n      if (typeof hsl[i] !== 'number' || hsl[i] > ((i === 0) ? 359 : 100) || hsl[i] < 0) return false\n    }\n    return true\n  },\n  __formatFactor (factor) {\n    if (typeof factor === 'number') return factor\n    if (typeof factor === 'string') return this.__convertString(factor)\n    if (Array.isArray(factor)) return (this.__checkRgb(factor)) ? factor : false\n    return false\n  },\n  __applyMethod (method, factor, rgb) {\n    factor = this.__formatFactor(factor)\n    if (factor === false) throw new Error('Invalid factor provided')\n    const numProvided = typeof factor === 'number'\n    switch (method) {\n      case 'multiply':\n        return rgb.map((channel, i) => channel * ((numProvided) ? factor : factor[i]))\n      case 'divide':\n        return rgb.map((channel, i) => channel / ((numProvided) ? factor : factor[i]))\n      case 'add':\n        return rgb.map((channel, i) => channel + ((numProvided) ? factor : factor[i]))\n      case 'subtract':\n        return rgb.map((channel, i) => channel - ((numProvided) ? factor : factor[i]))\n      default:\n        throw new Error('Invalid method provided')\n    }\n  },\n  __combine (rgb) {\n    return rgb.reduce((p, c) => p + this.__pad(c.toString(16)), '')\n  },\n  __pad (v, chars, char) {\n    chars = chars || 2\n    char = char || 0\n    return (v.length < chars) ? char.toString().repeat(Number.parseInt(chars) - v.length) + v : v\n  },\n  __setHsl (which, rgb, value) {\n    if (typeof value !== 'number') throw new Error('Invalid HSL value provided')\n    const hsl = this.__rgbToHsl(rgb)\n    hsl[which] = this.__normalize(value, ((which === 0) ? 359 : 100), 0)\n    return this.__hslToRgb(hsl)\n  },\n  __adjustHsl (which, rgb, factor) {\n    if (typeof factor !== 'number') throw new Error('Invalid factor provided')\n    const hsl = this.__rgbToHsl(rgb)\n    hsl[which] += factor\n    hsl[which] = this.__normalize(hsl[which], ((which === 0) ? 359 : 100), 0)\n    return this.__hslToRgb(hsl)\n  }\n}\n\nfunction Colorizer (color, flag) {\n  return Object.create(ColorizerBase).init(color, flag)\n}\n\nmodule.exports = Colorizer\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.colorizer = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';var ColorizerBase={/**\n   * Setup the Colorizer instance\n   * @param  {Array, String} color Hex, RGB, or HSL color\n   * @param  {Boolean} hsl   Flag to indicate the color is HSL\n   * @return {Object}       Colorizer instance\n   */init:function init(color,hsl){if(hsl){if(!this.__checkHsl(color))throw new Error('Invalid color provided');this.__rgb=this.__hslToRgb(color);return this;}if(typeof color==='string')color=this.__convertString(color);if(!this.__checkRgb(color))throw new Error('Invalid color provided');this.__rgb=color;return this;},/**\n   * Multiplies the RGB values for a Colorizer color\n   * @param  {Number, Array, String} factor a number or another color\n   * @return {Object}        Colorizer instance\n   */multiply:function multiply(factor){var rgb=this.__rgb;this.__rgb=this.__formatAll(this.__applyMethod('multiply',factor,[rgb[0],rgb[1],rgb[2]]));return this;},/**\n   * Divides the RGB values for a Colorizer color\n   * @param  {Number, Array, String} factor a number or another color\n   * @return {Object}        Colorizer instance\n   */divide:function divide(factor){var rgb=this.__rgb;this.__rgb=this.__formatAll(this.__applyMethod('divide',factor,[rgb[0],rgb[1],rgb[2]]));return this;},/**\n   * Adds the RGB values for a Colorizer color\n   * @param  {Number, Array, String} factor a number or another color\n   * @return {Object}        Colorizer instance\n   */add:function add(factor){var rgb=this.__rgb;this.__rgb=this.__formatAll(this.__applyMethod('add',factor,[rgb[0],rgb[1],rgb[2]]));return this;},/**\n   * Subtract the RGB values for a Colorizer color\n   * @param  {Number, Array, String} factor a number or another color\n   * @return {Object}        Colorizer instance\n   */subtract:function subtract(factor){var rgb=this.__rgb;this.__rgb=this.__formatAll(this.__applyMethod('subtract',factor,[rgb[0],rgb[1],rgb[2]]));return this;},/**\n   * Performs the same calculation to the color for a number of steps\n   * @param  {String} method the name of an existing method (add, subtract, etc.)\n   * @param  {Number, Array, String} factor a number or another color\n   * @param  {Number} steps  number of times to repeat the action\n   * @return {Array}        the stepped calculations, starting with the original color\n   */step:function step(method,factor,steps){var _this=this;var rgb=this.__rgb;var array=[rgb];for(var i=1;i<steps+1;i++){array.push(this.__applyMethod(method,factor,array[i-1]));}var converted=array.map(function(rgb){return _this.__combine(_this.__formatAll(rgb));});return converted;},/**\n   * Performs a gradient operation, returning the specified number of steps in the mixin\n   * @param  {Array, String} color another color\n   * @param  {Number} steps number of steps in between the two colors to return\n   * @return {Array}       the colors between the original color and color passed in\n   */blend:function blend(color,steps){var _this2=this;var rgb=this.__rgb;if(typeof color==='string')color=this.__convertString(color);var step=[(color[0]-rgb[0])/steps,(color[1]-rgb[1])/steps,(color[2]-rgb[2])/steps];var array=[rgb];for(var i=1;i<steps;i++){array.push([array[i-1][0]+step[0],array[i-1][1]+step[1],array[i-1][2]+step[2]]);}array.push(color);var converted=array.map(function(rgb){return _this2.__combine(_this2.__formatAll(rgb));});return converted;},/**\n   * Returns th luminance for the color\n   * @return {Number} the un-rounded luminance value between 0 and 1\n   */luminance:function luminance(){var rgb=this.__rgb;return 0.2126*(rgb[0]/255)+0.7152*(rgb[1]/255)+0.0722*(rgb[2]/255);},/**\n   * Set the hue on the color\n   * @param {Object} value Colorizer instance\n   */setHue:function setHue(value){this.__rgb=this.__setHsl(0,this.__rgb,value);return this;},/**\n   * Adjust the hue relative to where it is currently\n   * @param {Object} value Colorizer instance\n   */adjustHue:function adjustHue(factor){this.__rgb=this.__adjustHsl(0,this.__rgb,factor);return this;},/**\n   * Set the saturation on the color\n   * @param {Object} value Colorizer instance\n   */setSaturation:function setSaturation(value){this.__rgb=this.__setHsl(1,this.__rgb,value);return this;},/**\n   * Adjust the saturation relative to where it is currently\n   * @param {Object} value Colorizer instance\n   */adjustSaturation:function adjustSaturation(factor){this.__rgb=this.__adjustHsl(1,this.__rgb,factor);return this;},/**\n   * Set the lightness on the color\n   * @param {Object} value Colorizer instance\n   */setLightness:function setLightness(value){this.__rgb=this.__setHsl(2,this.__rgb,value);return this;},/**\n   * Adjust the lightness relative to where it is currently\n   * @param {Object} value Colorizer instance\n   */adjustLightness:function adjustLightness(factor){this.__rgb=this.__adjustHsl(2,this.__rgb,factor);return this;},/**\n   * Return the color in one of several format\n   * @param  {String} format the format to return\n   * @return {Array}          RGB (255, 255, 255)\n   * @return {String}         Hex\n   * @return {Array}          HSL (360, 100, 100)\n   * @return {Number}         Luminance (between 0 and 1)\n   */to:function to(format){var rgb=this.__rgb;switch(format){case'rgb':return rgb;case'hex':return this.__combine(rgb);case'hsl':return this.__rgbToHsl(rgb);case'luminance':return this.luminance();default:throw new Error('Invalid format provided.');}},__rgb:[0,0,0],__rgbToHsl:function __rgbToHsl(rgb){var hue=void 0,saturation=void 0,lightness=void 0;var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;var min=Math.min(r,g,b);var max=Math.max(r,g,b);var diff=max-min;lightness=(max+min)/2;if(diff===0)hue=saturation=0;else{saturation=lightness<0.5?diff/(max+min):diff/(2-max-min);switch(max){case r:hue=(g-b)/diff+(g<b?6:0);break;case g:hue=(b-r)/diff+2;break;case b:hue=(r-g)/diff+4;break;}}return[Math.round(hue*60),Math.round(saturation*100),Math.round(lightness*100)];},__hslToRgb:function __hslToRgb(hsl){var h=hsl[0]/360;var s=hsl[1]/100;var l=hsl[2]/100;var r=void 0,g=void 0,b=void 0;if(s===0){r=g=b=l;}else{var q=l<0.5?l*(1+s):l+s-l*s;var p=2*l-q;r=this.__hueToRgb(p,q,h+1/3);g=this.__hueToRgb(p,q,h);b=this.__hueToRgb(p,q,h-1/3);}return[Math.round(r*255),Math.round(g*255),Math.round(b*255)];},__hueToRgb:function __hueToRgb(p,q,t){if(t<0)t+=1;if(t>1)t-=1;if(t<1/6)return p+(q-p)*6*t;if(t<1/2)return q;if(t<2/3)return p+(q-p)*(2/3-t)*6;return p;},__convertString:function __convertString(hex){hex=hex.replace('#','');if(!/^([0-9a-fA-F]{3})(\\1|[0-9a-fA-F]{3})?$/.test(hex))throw new Error('Invalid hex color code provided');if(hex.length===3)hex=hex.replace(/[a-zA-Z0-9]/g,function(match,offset,string){return string.charAt(offset).repeat(2);});hex=Number.parseInt(hex,16);return[hex>>16&0xFF,hex>>8&0xFF,hex&0xFF];},__normalize:function __normalize(n,upper,lower){if(n>upper)return upper;if(n<lower)return lower;return n;},__format:function __format(n){return Math.round(this.__normalize(n,255,0));},__formatAll:function __formatAll(rgb){var _this3=this;return rgb.map(function(channel){return _this3.__format(channel);});},__checkRgb:function __checkRgb(rgb){if(rgb.length!==3)return false;for(var i=0;i<rgb.length;i++){if(typeof rgb[i]!=='number'||rgb[i]>255||rgb[i]<0)return false;}return true;},__checkHsl:function __checkHsl(hsl){if(hsl.length!==3)return false;for(var i=0;i<hsl.length;i++){if(typeof hsl[i]!=='number'||hsl[i]>(i===0?359:100)||hsl[i]<0)return false;}return true;},__formatFactor:function __formatFactor(factor){if(typeof factor==='number')return factor;if(typeof factor==='string')return this.__convertString(factor);if(Array.isArray(factor))return this.__checkRgb(factor)?factor:false;return false;},__applyMethod:function __applyMethod(method,factor,rgb){factor=this.__formatFactor(factor);if(factor===false)throw new Error('Invalid factor provided');var numProvided=typeof factor==='number';switch(method){case'multiply':return rgb.map(function(channel,i){return channel*(numProvided?factor:factor[i]);});case'divide':return rgb.map(function(channel,i){return channel/(numProvided?factor:factor[i]);});case'add':return rgb.map(function(channel,i){return channel+(numProvided?factor:factor[i]);});case'subtract':return rgb.map(function(channel,i){return channel-(numProvided?factor:factor[i]);});default:throw new Error('Invalid method provided');}},__combine:function __combine(rgb){var _this4=this;return rgb.reduce(function(p,c){return p+_this4.__pad(c.toString(16));},'');},__pad:function __pad(v,chars,char){chars=chars||2;char=char||0;return v.length<chars?char.toString().repeat(Number.parseInt(chars)-v.length)+v:v;},__setHsl:function __setHsl(which,rgb,value){if(typeof value!=='number')throw new Error('Invalid HSL value provided');var hsl=this.__rgbToHsl(rgb);hsl[which]=this.__normalize(value,which===0?359:100,0);return this.__hslToRgb(hsl);},__adjustHsl:function __adjustHsl(which,rgb,factor){if(typeof factor!=='number')throw new Error('Invalid factor provided');var hsl=this.__rgbToHsl(rgb);hsl[which]+=factor;hsl[which]=this.__normalize(hsl[which],which===0?359:100,0);return this.__hslToRgb(hsl);}};function Colorizer(color,flag){return Object.create(ColorizerBase).init(color,flag);}module.exports=Colorizer;\n\n},{}]},{},[1])(1)\n});\n\n"],"sourceRoot":"/source/"}