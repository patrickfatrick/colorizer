{"version":3,"sources":["node_modules/browser-pack/_prelude.js","index.js","colorizer.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","colorizer","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","red","green","blue","multiply","factor","rgb","__check","__format","__pad","toString","divide","add","subtract","step","method","steps","array","push","start","Number","parseInt","replace","__limit","Math","round","v","chars","char","repeat"],"mappings":"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","file":"colorizer.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict'\n\nconst colorizer = {\n  red: 0,\n  green: 0,\n  blue: 0,\n  multiply (factor, rgb) {\n    rgb = rgb || this\n    if (!this.__check(rgb)) throw new Error('Invalid RGB values provided')\n    const red = this.__format(rgb.red * factor)\n    const green = this.__format(rgb.green * factor)\n    const blue = this.__format(rgb.blue * factor)\n    return this.__pad(red.toString(16)) + this.__pad(green.toString(16)) + this.__pad(blue.toString(16))\n  },\n  divide (factor, rgb) {\n    rgb = rgb || this\n    if (!this.__check(rgb)) throw new Error('Invalid RGB values provided')\n    const red = this.__format(rgb.red / factor)\n    const green = this.__format(rgb.green / factor)\n    const blue = this.__format(rgb.blue / factor)\n    return this.__pad(red.toString(16)) + this.__pad(green.toString(16)) + this.__pad(blue.toString(16))\n  },\n  add (factor, rgb) {\n    rgb = rgb || this\n    if (!this.__check(rgb)) throw new Error('Invalid RGB values provided')\n    const red = this.__format(rgb.red + factor)\n    const green = this.__format(rgb.green + factor)\n    const blue = this.__format(rgb.blue + factor)\n    return this.__pad(red.toString(16)) + this.__pad(green.toString(16)) + this.__pad(blue.toString(16))\n  },\n  subtract (factor, rgb) {\n    rgb = rgb || this\n    if (!this.__check(rgb)) throw new Error('Invalid RGB values provided')\n    const red = this.__format(rgb.red - factor)\n    const green = this.__format(rgb.green - factor)\n    const blue = this.__format(rgb.blue - factor)\n    return this.__pad(red.toString(16)) + this.__pad(green.toString(16)) + this.__pad(blue.toString(16))\n  },\n  step (method, factor, steps, rgb) {\n    rgb = rgb || this\n    if (!this.__check(rgb)) throw new Error('Invalid RGB values provided')\n    if (typeof this[method] !== 'function') throw new Error('Invalid method provided')\n    let array = [this[method](factor, rgb)]\n    for (let i = 1; i < steps; i++) {\n      array.push(this.rgb(array[i - 1])[method](factor))\n    }\n    return array\n  },\n  rgb (start) {\n    if (typeof start === 'string') start = Number.parseInt(start.replace('#', ''), 16)\n    this.red = (start >> 16) & 0xFF\n    this.green = (start >> 8) & 0xFF\n    this.blue = start & 0xFF\n    return this\n  },\n  __limit (n) {\n    if (n > 255) return 255\n    if (n < 0) return 0\n    return n\n  },\n  __format (n) {\n    return Math.round(this.__limit(n))\n  },\n  __check (rgb) {\n    if (typeof rgb.red !== 'number' || rgb.red > 255 || rgb.red < 0) return false\n    if (typeof rgb.green !== 'number' || rgb.green > 255 || rgb.green < 0) return false\n    if (typeof rgb.blue !== 'number' || rgb.blue > 255 || rgb.blue < 0) return false\n    return true\n  },\n  __pad (v, chars, char) {\n    chars = chars || 2\n    char = char || 0\n    return (v.length < chars) ? char.toString().repeat(Number.parseInt(chars) - v.length) + v : v\n  }\n}\n\nmodule.exports = colorizer\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.colorizer = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';var colorizer={red:0,green:0,blue:0,multiply:function multiply(factor,rgb){rgb=rgb||this;if(!this.__check(rgb))throw new Error('Invalid RGB values provided');var red=this.__format(rgb.red*factor);var green=this.__format(rgb.green*factor);var blue=this.__format(rgb.blue*factor);return this.__pad(red.toString(16))+this.__pad(green.toString(16))+this.__pad(blue.toString(16));},divide:function divide(factor,rgb){rgb=rgb||this;if(!this.__check(rgb))throw new Error('Invalid RGB values provided');var red=this.__format(rgb.red/factor);var green=this.__format(rgb.green/factor);var blue=this.__format(rgb.blue/factor);return this.__pad(red.toString(16))+this.__pad(green.toString(16))+this.__pad(blue.toString(16));},add:function add(factor,rgb){rgb=rgb||this;if(!this.__check(rgb))throw new Error('Invalid RGB values provided');var red=this.__format(rgb.red+factor);var green=this.__format(rgb.green+factor);var blue=this.__format(rgb.blue+factor);return this.__pad(red.toString(16))+this.__pad(green.toString(16))+this.__pad(blue.toString(16));},subtract:function subtract(factor,rgb){rgb=rgb||this;if(!this.__check(rgb))throw new Error('Invalid RGB values provided');var red=this.__format(rgb.red-factor);var green=this.__format(rgb.green-factor);var blue=this.__format(rgb.blue-factor);return this.__pad(red.toString(16))+this.__pad(green.toString(16))+this.__pad(blue.toString(16));},step:function step(method,factor,steps,rgb){rgb=rgb||this;if(!this.__check(rgb))throw new Error('Invalid RGB values provided');if(typeof this[method]!=='function')throw new Error('Invalid method provided');var array=[this[method](factor,rgb)];for(var i=1;i<steps;i++){array.push(this.rgb(array[i-1])[method](factor));}return array;},rgb:function rgb(start){if(typeof start==='string')start=Number.parseInt(start.replace('#',''),16);this.red=start>>16&0xFF;this.green=start>>8&0xFF;this.blue=start&0xFF;return this;},__limit:function __limit(n){if(n>255)return 255;if(n<0)return 0;return n;},__format:function __format(n){return Math.round(this.__limit(n));},__check:function __check(rgb){if(typeof rgb.red!=='number'||rgb.red>255||rgb.red<0)return false;if(typeof rgb.green!=='number'||rgb.green>255||rgb.green<0)return false;if(typeof rgb.blue!=='number'||rgb.blue>255||rgb.blue<0)return false;return true;},__pad:function __pad(v,chars,char){chars=chars||2;char=char||0;return v.length<chars?char.toString().repeat(Number.parseInt(chars)-v.length)+v:v;}};module.exports=colorizer;\n\n},{}]},{},[1])(1)\n});\n\n"],"sourceRoot":"/source/"}