{"version":3,"sources":["node_modules/browser-pack/_prelude.js","index.js","colorizer.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","colorizer","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","red","green","blue","multiply","factor","rgb","__check","__combine","__formatAll","__applyMethod","divide","add","subtract","step","method","steps","array","push","start","Number","parseInt","replace","clone","Object","create","__limit","__format","Math","round","_this","map","channel","_this2","reduce","p","c","__pad","toString","v","chars","char","repeat"],"mappings":"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","file":"colorizer.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict'\n\nconst colorizer = {\n  red: 0,\n  green: 0,\n  blue: 0,\n  multiply (factor, rgb) {\n    rgb = rgb || this\n    if (!this.__check(rgb)) throw new Error('Invalid RGB values provided')\n    return this.__combine(this.__formatAll(this.__applyMethod('multiply', factor, [rgb.red, rgb.green, rgb.blue])))\n  },\n  divide (factor, rgb) {\n    rgb = rgb || this\n    if (!this.__check(rgb)) throw new Error('Invalid RGB values provided')\n    return this.__combine(this.__formatAll(this.__applyMethod('divide', factor, [rgb.red, rgb.green, rgb.blue])))\n  },\n  add (factor, rgb) {\n    rgb = rgb || this\n    if (!this.__check(rgb)) throw new Error('Invalid RGB values provided')\n    return this.__combine(this.__formatAll(this.__applyMethod('add', factor, [rgb.red, rgb.green, rgb.blue])))\n  },\n  subtract (factor, rgb) {\n    rgb = rgb || this\n    if (!this.__check(rgb)) throw new Error('Invalid RGB values provided')\n    return this.__combine(this.__formatAll(this.__applyMethod('subtract', factor, [rgb.red, rgb.green, rgb.blue])))\n  },\n  step (method, factor, steps, rgb) {\n    rgb = rgb || this\n    if (!this.__check(rgb)) throw new Error('Invalid RGB values provided')\n    if (typeof this[method] !== 'function') throw new Error('Invalid method provided')\n    let array = [this[method](factor, rgb)]\n    for (let i = 1; i < steps; i++) {\n      array.push(this.rgb(array[i - 1])[method](factor))\n    }\n    return array\n  },\n  rgb (start) {\n    if (typeof start === 'string') start = Number.parseInt(start.replace('#', ''), 16)\n    const clone = Object.create(this)\n    clone.red = (start >> 16) & 0xFF\n    clone.green = (start >> 8) & 0xFF\n    clone.blue = start & 0xFF\n    return clone\n  },\n  __limit (n) {\n    if (n > 255) return 255\n    if (n < 0) return 0\n    return n\n  },\n  __format (n) {\n    return Math.round(this.__limit(n))\n  },\n  __formatAll (rgb) {\n    return rgb.map((channel) => this.__format(channel))\n  },\n  __check (rgb) {\n    if (typeof rgb.red !== 'number' || rgb.red > 255 || rgb.red < 0) return false\n    if (typeof rgb.green !== 'number' || rgb.green > 255 || rgb.green < 0) return false\n    if (typeof rgb.blue !== 'number' || rgb.blue > 255 || rgb.blue < 0) return false\n    return true\n  },\n  __applyMethod (method, factor, rgb) {\n    switch (method) {\n      case 'multiply':\n        return rgb.map((channel) => channel * factor)\n      case 'divide':\n        return rgb.map((channel) => channel / factor)\n      case 'add':\n        return rgb.map((channel) => channel + factor)\n      case 'subtract':\n        return rgb.map((channel) => channel - factor)\n    }\n  },\n  __combine (rgb) {\n    return rgb.reduce((p, c) => p + this.__pad(c.toString(16)), '')\n  },\n  __pad (v, chars, char) {\n    chars = chars || 2\n    char = char || 0\n    return (v.length < chars) ? char.toString().repeat(Number.parseInt(chars) - v.length) + v : v\n  }\n}\n\nmodule.exports = colorizer\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.colorizer = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';var colorizer={red:0,green:0,blue:0,multiply:function multiply(factor,rgb){rgb=rgb||this;if(!this.__check(rgb))throw new Error('Invalid RGB values provided');return this.__combine(this.__formatAll(this.__applyMethod('multiply',factor,[rgb.red,rgb.green,rgb.blue])));},divide:function divide(factor,rgb){rgb=rgb||this;if(!this.__check(rgb))throw new Error('Invalid RGB values provided');return this.__combine(this.__formatAll(this.__applyMethod('divide',factor,[rgb.red,rgb.green,rgb.blue])));},add:function add(factor,rgb){rgb=rgb||this;if(!this.__check(rgb))throw new Error('Invalid RGB values provided');return this.__combine(this.__formatAll(this.__applyMethod('add',factor,[rgb.red,rgb.green,rgb.blue])));},subtract:function subtract(factor,rgb){rgb=rgb||this;if(!this.__check(rgb))throw new Error('Invalid RGB values provided');return this.__combine(this.__formatAll(this.__applyMethod('subtract',factor,[rgb.red,rgb.green,rgb.blue])));},step:function step(method,factor,steps,rgb){rgb=rgb||this;if(!this.__check(rgb))throw new Error('Invalid RGB values provided');if(typeof this[method]!=='function')throw new Error('Invalid method provided');var array=[this[method](factor,rgb)];for(var i=1;i<steps;i++){array.push(this.rgb(array[i-1])[method](factor));}return array;},rgb:function rgb(start){if(typeof start==='string')start=Number.parseInt(start.replace('#',''),16);var clone=Object.create(this);clone.red=start>>16&0xFF;clone.green=start>>8&0xFF;clone.blue=start&0xFF;return clone;},__limit:function __limit(n){if(n>255)return 255;if(n<0)return 0;return n;},__format:function __format(n){return Math.round(this.__limit(n));},__formatAll:function __formatAll(rgb){var _this=this;return rgb.map(function(channel){return _this.__format(channel);});},__check:function __check(rgb){if(typeof rgb.red!=='number'||rgb.red>255||rgb.red<0)return false;if(typeof rgb.green!=='number'||rgb.green>255||rgb.green<0)return false;if(typeof rgb.blue!=='number'||rgb.blue>255||rgb.blue<0)return false;return true;},__applyMethod:function __applyMethod(method,factor,rgb){switch(method){case'multiply':return rgb.map(function(channel){return channel*factor;});case'divide':return rgb.map(function(channel){return channel/factor;});case'add':return rgb.map(function(channel){return channel+factor;});case'subtract':return rgb.map(function(channel){return channel-factor;});}},__combine:function __combine(rgb){var _this2=this;return rgb.reduce(function(p,c){return p+_this2.__pad(c.toString(16));},'');},__pad:function __pad(v,chars,char){chars=chars||2;char=char||0;return v.length<chars?char.toString().repeat(Number.parseInt(chars)-v.length)+v:v;}};module.exports=colorizer;\n\n},{}]},{},[1])(1)\n});\n\n"],"sourceRoot":"/source/"}